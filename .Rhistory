### Các package cần
library(ggplot2) # Vẽ hình
library(patchwork) # Kết nối các hình với nhau
### Tải dữ liệu theo nhóm tuổi trong nghiên cứu CHIME
linkURL <- "https://raw.githubusercontent.com/thanhkim1993/ScienceBlog/main/Plotting-pyramids/Weighted-Population.csv"  # Lưu đường link
temporary <- tempfile(pattern = "Weighted-Population", fileext = ".csv") # Tạo một đường dẫn tạm thời trong máy tính
download.file(linkURL, temporary, method = "curl") # Tải tập tin csv về máy theo đường dẫn tạm thời
population <- read.csv(temporary) # Import tập tin csv vào R
unlink(temporary) # Xóa tập tin csv và đường dẫn tương ứng. Đây là bước cần thiết để tránh ứ đọng file không cần thiết
View(population)
# Bước 2: Vẽ biểu đồ cột
figure1 + geom_bar(stat = "identity")
### Vẽ tháp tuổi trong nghiên cứu CHIME
# Bước 1: Khai báo data set và trục tọa độ cho ggplot2, rồi gán vào `figure1`
figure1 <- ggplot(population, aes(x = age_g5, y = population, fill = male_u))  # lệnh `fill = male_u` nhằm phân tầng theo giới tính
# Bước 2: Vẽ biểu đồ cột
figure1 + geom_bar(stat = "identity")
ggplot(population, aes(x = age_g5, y = population, fill = male_u))
# Bước 2: Vẽ biểu đồ cột
ggplot(population, aes(x = age_g5, y = population, fill = male_u)) +  # Lưu ý ở đây có dấu cộng. Xuống hàng cho nó gọn.
geom_bar(stat = "identity") # `geom_bar(stat = "identity")`` chức năng y hệt `geom_bar()``
# Bước 3: Vẽ biểu đổ nằm ngang + tách biệt nam và nữ bằng một trục cho giống tháp tuổi
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity")
# Bước 4: Vẽ biểu đổ nằm ngang cho giống tháp tuổi
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() # Lệnh này giúp xoay hình nằm ngang
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(labels = abs, # Trị tuyệt đối các giá trị ở cột y
limits = max(population$population*c(-1,1))) + # Đặt giới hạn hai bên cho đều hình
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population/1000,population/1000), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(labels = abs, # Trị tuyệt đối các giá trị ở cột y
limits = max(population$population/1000*c(-1,1))) + # Đặt giới hạn hai bên cho đều hình
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) + geom_bar(stat = "identity")
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(labels = abs, # Trị tuyệt đối các giá trị ở cột y
limits = max(population$population/1000*c(-1,1)))
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(labels = abs,
limits = max(population$population/1000*c(-1,1)))
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(labels = abs, limits = max(population$population/1000*c(-1,1)))
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() + scale_y_continuous(labels = abs, limits = max(population$population/1000*c(-1,1)))
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red"))
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs, limits = population*c(-1,1)) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs, limits = population*c(-1,1)) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs, limits = max(population)*c(-1,1)) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs, limits = max(population$population)*c(-1,1)) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population)*c(-1,1)) +
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",
breaks = c("Female", "Male"),
values = c("blue","red")) +
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",   # Đặt tên legend
breaks = c("Female", "Male"),
values = c("blue","red")) + #Chỉnh màu
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",   # Đặt tên legend
breaks = c("Female", "Male"),
values = c("blue","red")) + #Chỉnh màu
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population") +
theme_bw() # Chỉnh theme màu này cho sáng hình
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population/1000,population/1000), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",   # Đặt tên legend
breaks = c("Female", "Male"),
values = c("blue","red")) + #Chỉnh màu
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population/1000)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyrimid in CHIME", x = "Age group", y = "Population (thousand") +
theme_bw() # Chỉnh theme màu này cho sáng hình
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population/1000,population/1000), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",   # Đặt tên legend
breaks = c("Female", "Male"),
values = c("blue","red")) + #Chỉnh màu
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population/1000)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyramid in CHIME", x = "Age group", y = "Population (thousand)") +
theme_bw() # Chỉnh theme màu này cho sáng hình
### Tương tự như vậy, ta vẽ tháp tuổi của Thành phố Hồ CHí Minh trong năm 2019
linkURL <- "https://raw.githubusercontent.com/thanhkim1993/ScienceBlog/main/Plotting-pyramids/HCMC-population.csv"
temporary <- tempfile(pattern = "HCMC-Population", fileext = ".csv")
download.file(linkURL, temporary, method = "curl")
HCMCpopulation <- read.csv(temporary)
unlink(temporary)
### Vẽ tháp tuổi TPHCM
chart2 <- ggplot(HCMCpopulation,
aes(x=Age_group,
y = ifelse(sex == "Female", population/1000, -population/1000),
fill = sex)) +
geom_col() + coord_flip() +
scale_y_continuous(labels = abs, limits = max(HCMCpopulation$population)*c(-0.001,0.001)) +
scale_fill_manual(name="Sex",
breaks=c("Female", "Male"),
values = c("blue","red")) + labs(x = "Age group", y = "Population (thousand)")  +
labs(title = "Population pyramid in Ho Chi MInh City")  + theme_bw()
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp, rồi gán vào `chart1`
chart1 <- ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population/1000,population/1000), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",   # Đặt tên legend
breaks = c("Female", "Male"),
values = c("blue","red")) + #Chỉnh màu
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population/1000)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyramid in CHIME", x = "Age group", y = "Population (thousand)") +
theme_bw() # Chỉnh theme màu này cho sáng hình
### Vẽ tháp tuổi TPHCM rồi gán vào chart2
chart2 <- ggplot(HCMCpopulation,
aes(x=Age_group,
y = ifelse(sex == "Female", population/1000, -population/1000),
fill = sex)) +
geom_col() + coord_flip() +
scale_y_continuous(labels = abs, limits = max(HCMCpopulation$population)*c(-0.001,0.001)) +
scale_fill_manual(name="Sex",
breaks=c("Female", "Male"),
values = c("blue","red")) + labs(x = "Age group", y = "Population (thousand)")  +
labs(title = "Population pyramid in Ho Chi MInh City")  + theme_bw()
chart2
### Bây giờ ta gộp 2 tháp tuổi với nhau để dễ so sánh. Lúc này package `patchwork` phát huy tác dụng
appended.chart <- chart1 + chart2
appended.chảt
appended.chart
print(appended.chart)
View(HCMCpopulation)
View(population)
### Vẽ tháp tuổi trong nghiên cứu CHIME
# Bước 1: Khai báo data set và trục tọa độ cho ggplot2. Lúc này chỉ thấy trục tọa độ. Chưa có hình.
ggplot(population, aes(x = age_g5, y = population, fill = male_u))  # lệnh `fill = male_u` nhằm phân tầng theo giới tính
# Bước 2: Vẽ biểu đồ cột
ggplot(population, aes(x = age_g5, y = population, fill = male_u)) +  # Lưu ý ở đây có dấu cộng. Xuống hàng cho nó gọn.
geom_bar(stat = "identity") # `geom_bar(stat = "identity")`` chức năng y hệt `geom_bar()``
# Bước 3: Tách biệt nam và nữ bằng một trục cho giống tháp tuổi
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity")
# Bước 4: Vẽ biểu đổ nằm ngang cho giống tháp tuổi
ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population,population), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() # Lệnh này giúp xoay hình nằm ngang
# Bước 5: Format lại thông tin trên trục x,y và chỉnh màu sắc cho đẹp, rồi gán vào `chart1`
chart1 <- ggplot(population, aes(x = age_g5, y = ifelse(male_u == "Male", -population/1000,population/1000), fill = male_u)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(name = "Sex",   # Đặt tên legend
breaks = c("Female", "Male"),
values = c("blue","red")) + #Chỉnh màu
scale_y_continuous(labels = abs, # trị truyệt đối cột y
limits = max(population$population/1000)*c(-1,1)) + # Chỉnh giới hạn cột y cho 2 bên đều nhau
labs(title = "Weighted popoulation pyramid in CHIME", x = "Age group", y = "Population (thousand)") +
theme_bw() # Chỉnh theme màu này cho sáng hình
print(chart1)
print(chart2)
### Bây giờ ta gộp 2 tháp tuổi với nhau để dễ so sánh. Lúc này package `patchwork` phát huy tác dụng
appended.chart <- chart1 + chart2
print(appended.chart)
